=begin
#Square Connect API

OpenAPI spec version: 2.0
Contact: developers@squareup.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require 'date'
require 'spec_helper'
require 'json'

# Unit tests for SquareConnect::ReportingApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ReportingApi' do
  let(:accounts) { load_accounts() }
  let(:account) { accounts['US-Prod'] }
  let(:location_id) { account['location_id'] }
  let(:instance) do
    configuration = SquareConnect::Configuration.new do |config|
      config.access_token = account['access_token']
    end
    client = SquareConnect::ApiClient.new(configuration)

    SquareConnect::ReportingApi.new(client)
  end

  describe 'test an instance of ReportingApi' do
    it 'should create an instance of ReportingApi' do
      expect(instance).to be_instance_of(SquareConnect::ReportingApi)
    end
  end

  # unit tests for list_additional_recipient_receivable_refunds
  # ListAdditionalRecipientReceivableRefunds
  # Lists Additional Recipient Receivable Refunds for a particular location.  Max results per [page](#paginatingresults): 50
  # @param location_id The ID of the location to list AdditionalRecipientReceivableRefunds for.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :begin_time The beginning of the requested reporting period, in RFC 3339 format.  See [Date ranges](#dateranges) for details on date inclusivity/exclusivity.  Default value: The current time minus one year.
  # @option opts [String] :end_time The end of the requested reporting period, in RFC 3339 format.  See [Date ranges](#dateranges) for details on date inclusivity/exclusivity.  Default value: The current time.
  # @option opts [String] :sort_order The order in which results are listed in the response (&#x60;ASC&#x60; for oldest first, &#x60;DESC&#x60; for newest first).  Default value: &#x60;DESC&#x60;
  # @option opts [String] :cursor A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for your original query.  See [Paginating results](#paginatingresults) for more information.
  # @return [ListAdditionalRecipientReceivableRefundsResponse]
  describe 'list_additional_recipient_receivable_refunds test' do
    let(:request) do
      {
        begin_time: (DateTime.now - 30).rfc3339,
        end_time: DateTime.now.rfc3339,
        sort_order: 'DESC'
      }
    end

    it 'should succeed' do
      response = instance.list_additional_recipient_receivable_refunds(location_id, request)

      expect(response.errors).to be_nil
    end
  end

  # unit tests for list_additional_recipient_receivables
  # ListAdditionalRecipientReceivables
  # Lists Additional Recipient Receivables for a particular location.  Max results per [page](#paginatingresults): 50
  # @param location_id The ID of the location to list AdditionalRecipientReceivables for.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :begin_time The beginning of the requested reporting period, in RFC 3339 format.  See [Date ranges](#dateranges) for details on date inclusivity/exclusivity.  Default value: The current time minus one year.
  # @option opts [String] :end_time The end of the requested reporting period, in RFC 3339 format.  See [Date ranges](#dateranges) for details on date inclusivity/exclusivity.  Default value: The current time.
  # @option opts [String] :sort_order The order in which results are listed in the response (&#x60;ASC&#x60; for oldest first, &#x60;DESC&#x60; for newest first).  Default value: &#x60;DESC&#x60;
  # @option opts [String] :cursor A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for your original query.  See [Paginating results](#paginatingresults) for more information.
  # @return [ListAdditionalRecipientReceivablesResponse]
  describe 'list_additional_recipient_receivables test' do
    let(:request) do
      {
        begin_time: (DateTime.now - 30).rfc3339,
        end_time: DateTime.now.rfc3339,
        sort_order: 'DESC'
      }
    end

    it 'should succeed' do
      response = instance.list_additional_recipient_receivables(location_id, request)

      expect(response.errors).to be_nil
    end
  end

end
